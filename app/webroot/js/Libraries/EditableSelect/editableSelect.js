

//PEPPER POTTS FUNCTION: handleEverything
//Why? Because Pepper Potts is a badass chick who just takes care of it all

var EditableSelect_editableSelect = new editableSelect();
EditableSelect_editableSelect.handleEverything();

//Setup the object for handling this jurry rigged editable select box
function editableSelect(){
	
	//PUBLIC FUNCTION: adjustSelectToTextBox
	//Change the option's text to match what has been typed in the select box
	this.adjustSelectToTextBox = function( triggeringEvent ){
				
		//Get the targeted element
		var element = triggeringEvent.target;
				
		//Grab the editableSelect value
		//This should be a dateTimeStamp generated by the PHP that generated
		//the element and should have a unique match with the select box that
		//we paired it with to get this editable select functionality.
		var editableSelectUID = jQuery( element ).attr( 'editableSelect' );
		
		//Now grab the value stored in the corresponding select
		var typedText = jQuery( 'input[type="text"][editableSelect="' + editableSelectUID + '"].editableSelect' ).val();
		
		//Now that we have the text that's selected we can just slam it into the corresponding text input and we're golden
		jQuery( 'select[editableSelect="' + editableSelectUID + '"].editableSelect > option:selected' ).html( typedText );
		
	}
	
	//PUBLIC FUNCTION: adjustTextBoxToSelect
	//Change the contents of the given Text Box to reflect the contents of
	//the selected option in its paired select box.
	this.adjustTextBoxToSelect = function( element ){
		
		//Grab the editableSelect value
		//This should be a dateTimeStamp generated by the PHP that generated
		//the element and should have a unique match with the text box that
		//we paired it with to get this editable select functionality.
		var editableSelectUID = jQuery( element ).attr( 'editableSelect' );
		
		//Now grab the value stored in the corresponding select
		var selectedText = jQuery( 'select[editableSelect="' + editableSelectUID + '"].editableSelect > option:selected' ).html();
		
		//Now that we have the text that's selected we can just slam it into the corresponding text input and we're golden
		jQuery( 'input[type="text"][editableSelect="' + editableSelectUID + '"].editableSelect' ).val( selectedText );
		
	}
	
	//PUBLIC FUNCTION: handleEverything
	//The Pepper Potts function, in that it will just handle everything
	this.handleEverything = function(){
		EditableSelect_editableSelect.handleSaveButton();
		EditableSelect_editableSelect.handleSelectChange();
	}
	
	//PUBLIC FUCNTION: handleSaveButton
	//Handle the save button that'll change what is stored in the select
	this.handleSaveButton = function(){
		
		//Add a handler to the <input>s
		jQuery( 'input[type="button"].editableSelectSave' ).each( function(){
			
			if( ! jQuery(this).isBound( 'click', EditableSelect_editableSelect.adjustSelectToTextBox ) ){
				jQuery(this).click(
						EditableSelect_editableSelect.adjustSelectToTextBox
				);
			}
			
		});
				
	}
	
	//PUBLIC FUNCTION: handleSelectChange
	//Handle changing what displays in the textbox when the select is changed
	this.handleSelectChange = function(){
		
		//Add a handler to each editableSelect <select> that hasn't already been bound
		//Also do an initial populate
		jQuery( 'select.editableSelect' ).each( function(){
			
			if( ! jQuery(this).isBound( 'change', EditableSelect_editableSelect.adjustTextBoxToSelect ) ){
				jQuery(this).change(
					EditableSelect_editableSelect.adjustTextBoxToSelect
				);
				EditableSelect_editableSelect.adjustTextBoxToSelect( this );
			}
			
			
		});
		
	}
	
}